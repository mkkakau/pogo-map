var fb={db:null,config:{apiKey:"AIzaSyD0LhmulK6Hrn-m-gfhj3XFNUq2OgfEmzg",authDomain:"pogo-63931.firebaseapp.com",databaseURL:"https://pogo-63931.firebaseio.com",storageBucket:"pogo-63931.appspot.com"},start:function(){firebase.initializeApp(this.config),this.db=firebase.database()},onChildAdded:function(t,a){var e=this.db.ref(t);e.on("child_added",function(t){var e=t.val();a(e)})}};fb.start();var pokeapi={urlPrefix:"https://pokeapi.co/api/v2/pokemon/",getData:function(t,a){var e=this.urlPrefix+t;$.getJSON(e,function(t){var e=[];t.types.forEach(function(t){e.push(t.type.name)});var i={weight:t.weight,height:t.height,types:e,status:"ok"};a(i)}).fail(function(){var t={weight:null,height:null,types:null,status:"fail"};a(t)})}},map,infoWindow,initMap=function(){map=new google.maps.Map(document.getElementById("map"),{center:{lat:19.725862,lng:-155.06906},zoom:16}),infoWindow=new google.maps.InfoWindow},googleError=function(){document.getElementById("map").innerHTML="<h1>Sorry, Google Maps is unavailable at the moment</h1><p>Please try again later.</p>"},pogosnap={urlPrefix:"https://www.reddit.com/r/PokemonGoSnap/search.json?",params:{restrict_sr:"true",limit:"1",sort:"top"},getData:function(t,a){var e=this,i=e.urlPrefix;i+="q="+t.name,i+="&restrict_sr="+e.params.restrict_sr,i+="&limit="+e.params.limit,i+="&sort="+e.params.sort;$.getJSON(i,function(t){var e=t.data.children[0].data;if(void 0!==e){var i={picture:pogosnap.fixUrl(e.preview.images[0].source.url),author:e.author,permalink:"https://www.reddit.com"+e.permalink,status:"ok"};a(i)}else{var r={picture:"#",author:"",permalink:"",status:"noresults"};a(r)}}).fail(function(){var t={picture:"#",author:"",permalink:"",status:"fail"};a(t)})},fixUrl:function(t){var a=t;return t.search("reddituploads")&&(a=t.split("&amp;").join("&")),t.search("imgur")&&t.search(".jpg")===-1&&(a+=".jpg"),a}};
var Pokemon=function(e,n){var i=this;i.id=e,i.name=n,i.icon="",i.types=[],i.weight="",i.height="",i.pokeapiStatus=null,i.picture="",i.author="",i.permalink="#",i.pogosnapStatus=null,i.setIcon=function(){var e="img/",n=".png",o=i.id.toString();i.id<10?o="00"+o:i.id<100&&(o="0"+o),i.icon=e+o+n},i.setIcon()},Location=function(e,n,i,o,t){var a=this;a.id=e,a.type=n,a.lat=i,a.lng=o,a.name=t,a.icon="img/"+n+".png",a.markerCreated=!1,a.streetViewUrl="",a.setStreetViewUrl=function(){var e="https://maps.googleapis.com/maps/api/streetview?",n={location:a.lat+","+a.lng,size:"300x200",key:"AIzaSyDnmyJXbQ5xflnzlvc1dJetLgJPbNerL-o"};e+="location="+n.location,e+="&size="+n.size,e+="&key="+n.key,a.streetViewUrl=e},a.openInfoWindow=function(){infoWindow.setContent(MapView.fillTemplate(a)),infoWindow.open(map,model.markers[a.id]),model.markers[a.id].setAnimation(google.maps.Animation.BOUNCE),setTimeout(function(){model.markers[a.id].setAnimation(null)},1420),$(".drawer").drawer("close")},a.setStreetViewUrl()},SpawnLocation=function(e,n,i,o){var t=this;t.id=e,t.type="spawn",t.lat=n,t.lng=i,t.name="",t.icon="",t.poke_id=o,t.openInfoWindow=function(){infoWindow.setContent(MapView.fillTemplate(t)),infoWindow.open(map,model.markers[t.id]),model.markers[t.id].setAnimation(google.maps.Animation.BOUNCE),setTimeout(function(){model.markers[t.id].setAnimation(null)},1420)},t.updatePokemon=function(e){t.poke_id=e.id,t.name=e.name,t.icon=e.icon}},model={pokemons:[],locations:[],markers:[]};
var MapView={createMarker:function(i){var o=this;void 0===model.markers[i.id]?(model.markers[i.id]=new google.maps.Marker({position:{lat:i.lat,lng:i.lng},map:map,icon:i.icon,title:i.name,id:i.id}),model.markers[i.id].addListener("click",function(){infoWindow.setContent(o.fillTemplate(i)),infoWindow.open(map,model.markers[i.id]),model.markers[i.id].setAnimation(google.maps.Animation.BOUNCE),setTimeout(function(){model.markers[i.id].setAnimation(null)},1420)})):console.log("Marker already created for location:",i.name)},template:'<div id="loc-%id%"><h3>%name%</h3><p>(%lat%, %lng%)</p><p>Google Street View: </p><img src="%streetview%" alt="%name%"></div>',spawnTemplate:'<div id="loc-%id%"><h3>#%pokemon_id% %name%</h3><p>(%lat%, %lng%)</p>%pogosnapStatus%<div class="pic"%pogosnapHidden%><img src="%picture%" alt="%name%" style="width: 15em; height: 15em; object-fit: cover;"><p>Image Source: <a href="%permalink%">/r/PokemonGoSnap</a><br>Posted by: %author%</p></div>%pokeapiStatus%<div class="bio" %pokeapiHidden%><ul><li>Types: %types%</li><li>Weight: %weight% kg</li><li>Height: %height% m</li></ul></div></div>',fillTemplate:function(i){var o,e=model.pokemons[i.poke_id];if("spawn"===i.type)if(o=this.spawnTemplate,o=o.split("%pokemon_id%").join(i.poke_id),o=o.split("%picture%").join(e.picture),"ok"===e.pogosnapStatus?(o=o.split("%pogosnapHidden%").join(""),o=o.split("%pogosnapStatus%").join(""),o=o.split("%author%").join(e.author),o=o.split("%permalink%").join(e.permalink)):"noresults"===e.pogosnapStatus?(o=o.split("%pogosnapHidden%").join(" hidden"),o=o.split("%pogosnapStatus%").join("<p>Pokemon does not have a picture</p>")):"loading"===e.pogosnapStatus?(o=o.split("%pogosnapHidden%").join(" hidden"),o=o.split("%pogosnapStatus%").join('<p>Loading picture...</p><br><img src="https://upload.wikimedia.org/wikipedia/commons/d/de/Ajax-loader.gif" "Loading icon">')):(o=o.split("%pogosnapHidden%").join(" hidden"),o=o.split("%pogosnapStatus%").join("<p>Error loading picture from Reddit</p>")),"ok"===e.pokeapiStatus){o=o.split("%pogoapiHidden%").join(""),o=o.split("%pokeapiStatus%").join(""),o=o.split("%weight%").join(e.weight/10),o=o.split("%height%").join(e.height/10);var t=e.types.join(", ");o=o.split("%types%").join(t)}else"loading"===e.pokeapiStatus?(o=o.split("%pokeapiHidden%").join(" hidden"),o=o.split("%pokeapiStatus%").join('<p>Loading stats...</p><br><img src="https://upload.wikimedia.org/wikipedia/commons/d/de/Ajax-loader.gif" "Loading icon">')):(o=o.split("%pokeapiHidden%").join(" hidden"),o=o.split("%pokeapiStatus%").join("<p>Error loading stats from Pokeapi</p>"));else o=this.template,o=o.split("%streetview%").join(i.streetViewUrl);return o=o.split("%id%").join(i.id),o=o.split("%type%").join(i.type),o=o.split("%lat%").join(i.lat),o=o.split("%lng%").join(i.lng),o=o.split("%name%").join(i.name),o=o.split("%icon%").join(i.icon)}};
var ListViewViewModel=function(){var e=this;e.query=ko.observable(""),e.locations=ko.observableArray(),e.filteredLocations=ko.computed(function(){var o=e.query().toLowerCase(),r=[];return e.locations().sort(function(e,o){e.name.toLowerCase(),o.name.toLowerCase();return e.name>o.name?1:e.name<o.name?-1:0}),""===o?(model.markers.forEach(function(e){e.setVisible(!0)}),e.locations()):(model.markers.forEach(function(e){e.setVisible(!1)}),e.locations().forEach(function(e){var a=e.name.toLowerCase(),i=e.type.toLowerCase();(a.search(o)>-1||i.search(o)>-1)&&(model.markers[e.id].setVisible(!0),r.push(e),console.log(e))}),r)})},listView=new ListViewViewModel;ko.applyBindings(listView),$(document).ready(function(){$(".drawer").drawer()});
var controller={init:function(){var o=this;o.updateGyms(),o.updateSpawns(),o.updatePokeStops()},updateGyms:function(){fb.onChildAdded("gyms",function(o){var e=o.id,t=o.title,n=o.lat,a=o.lng,p=new Location(e,"gym",n,a,t);MapView.createMarker(p),listView.locations.push(p)})},updatePokeStops:function(){fb.onChildAdded("pokestops",function(o){var e=o.id,t=o.title,n=o.lat,a=o.lng,p=new Location(e,"pokestop",n,a,t);MapView.createMarker(p),listView.locations.push(p)})},updateSpawns:function(){fb.onChildAdded("spawns",function(o){var e=o.id,t=o.pokemon_id,n=o.pokemon_name,a=o.lat,p=o.lng;model.locations[e]=new SpawnLocation(e,a,p,t),void 0===model.pokemons[t]?(model.pokemons[t]=new Pokemon(t,n),model.locations[e].updatePokemon(model.pokemons[t]),MapView.createMarker(model.locations[e]),listView.locations.push(model.locations[e])):(model.locations[e].updatePokemon(model.pokemons[t]),MapView.createMarker(model.locations[e]),listView.locations.push(model.locations[e])),"loading"!==model.pokemons[t].pogoSnapStatus&&(model.pokemons[t].pogoSnapStatus="loading",pogosnap.getData(model.pokemons[t],function(o){model.pokemons[t].picture=o.picture,model.pokemons[t].permalink=o.permalink,model.pokemons[t].author=o.author,model.pokemons[t].pogosnapStatus=o.status})),"loading"!==model.pokemons[t].pokeapiStatus&&(model.pokemons[t].pokeapiStatus="loading",pokeapi.getData(t,function(o){model.pokemons[t].weight=o.weight,model.pokemons[t].height=o.height,model.pokemons[t].types=o.types,model.pokemons[t].pokeapiStatus=o.status}))})}};controller.init();
//# sourceMappingURL=data:application/json;base64,
