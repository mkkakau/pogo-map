var fb={db:null,config:{apiKey:"AIzaSyD0LhmulK6Hrn-m-gfhj3XFNUq2OgfEmzg",authDomain:"pogo-63931.firebaseapp.com",databaseURL:"https://pogo-63931.firebaseio.com",storageBucket:"pogo-63931.appspot.com"},start:function(){firebase.initializeApp(this.config),this.db=firebase.database()},onChildAdded:function(t,a){var r=this.db.ref(t);r.on("child_added",function(t){var r=t.val();a(r)})}};fb.start();var pokeapi={urlPrefix:"https://pokeapi.co/api/v2/pokemon/",getData:function(t,a){var r=this.urlPrefix+t;$.getJSON(r,function(t){t.status="ok",a(t)}).fail(function(){var t={weight:null,height:null,types:null,status:"fail"};a(t)})}},map,initMap=function(){map=new google.maps.Map(document.getElementById("map"),{center:{lat:19.725862,lng:-155.06906},zoom:16})},pogosnap={urlPrefix:"https://www.reddit.com/r/PokemonGoSnap/search.json?",params:{restrict_sr:"true",limit:"1",sort:"top"},getData:function(t,a){var r=this,i=r.urlPrefix;i+="q="+t.name,i+="&restrict_sr="+r.params.restrict_sr,i+="&limit="+r.params.limit,i+="&sort="+r.params.sort;$.getJSON(i,function(t){var i=t.data.children[0].data;if(void 0!==i){var e={picture:r.fixUrl(i.url),author:i.author,permalink:"https://www.reddit.com"+i.permalink,status:"ok"};a(e)}else{var o={picture:"#",author:"",permalink:"",status:"noresults"};a(o)}}).fail(function(){var t={picture:"#",author:"",permalink:"",status:"fail"};a(t)})},fixUrl:function(t){var a=t;return t.search("reddituploads")&&(a=t.split("&amp;").join("&")),t.search("imgur")&&t.search(".jpg")===-1&&(a+=".jpg"),a}};
var Pokemon=function(e,t){var o=this;o.id=e,o.name=t,o.types=[],o.weight="",o.height="",o.pokeapiStatus="loading",o.picture="",o.author="",o.permalink="#",o.pogosnapStatus="loading"},Location=function(e,t,o,n,a){var i=this;i.id=e,i.type=t,i.lat=o,i.lng=n,i.name=a,i.icon="img/"+t+".png",i.markerCreated=!1,i.streetViewUrl="",i.setStreetViewUrl=function(){var e="https://maps.googleapis.com/maps/api/streetview?",t={location:i.lat+","+i.lng,size:"300x200",key:"AIzaSyDnmyJXbQ5xflnzlvc1dJetLgJPbNerL-o"};e+="location="+t.location,e+="&size="+t.size,e+="&key="+t.key,i.streetViewUrl=e},i.logLatLng=function(){map.panTo({lat:i.lat,lng:i.lng}),map.setZoom(17)},i.setStreetViewUrl()},SpawnLocation=function(e,t,o,n){var a=this;a.id=e,a.type="spawn",a.lat=t,a.lng=o,a.icon="https://pokeapi.co/media/sprites/pokemon/"+n.id+".png",a.name=n.name,a.markerCreated=!1,a.pokemon_id=n.id,a.logLatLng=function(){map.panTo({lat:a.lat,lng:a.lng}),map.setZoom(17)},a.updatePokeInfo=function(e){a.name=e.name,a.pokemon_id=e.id,a.icon="https://pokeapi.co/media/sprites/pokemon/"+e.id+".png"}},model={pokemons:[],locations:[],markers:[],infowindows:[]};
var MapView={updateMarker:function(i){var o=this;i.markerCreated===!1&&(model.markers[i.id]=new google.maps.Marker({position:{lat:i.lat,lng:i.lng},map:map,icon:i.icon,title:i.name,id:i.id}),model.infowindows[i.id]=new google.maps.InfoWindow,model.markers[i.id].addListener("click",function(){model.infowindows[i.id].open(map,model.markers[i.id]),model.markers[i.id].setAnimation(google.maps.Animation.BOUNCE),setTimeout(function(){model.markers[i.id].setAnimation(null)},1420)}),i.markerCreated=!0),model.infowindows[i.id].setContent(o.fillTemplate(i))},template:'<div id="loc-%id%"><h3>%name%</h3><p>(%lat%, %lng%)</p><p>Google Street View: </p><img src="%streetview%" alt="%name%"></div>',spawnTemplate:'<div id="loc-%id%"><h3>#%pokemon_id% %name%</h3><p>(%lat%, %lng%)</p>%pogosnapStatus%<div class="pic"%pogosnapHidden%><img src="%picture%" alt="%name%" style="width: 15em; height: 15em; object-fit: cover;"><p>Image Source: <a href="%permalink%">/r/PokemonGoSnap</a><br>Posted by: %author%</p></div>%pokeapiStatus%<div class="bio" %pokeapiHidden%><ul><li>Types: %types%</li><li>Weight: %weight% kg</li><li>Height: %height% m</li></ul></div></div>',fillTemplate:function(i){var o,e=model.pokemons[i.pokemon_id];if("spawn"===i.type)if(o=this.spawnTemplate,o=o.split("%pokemon_id%").join(i.pokemon_id),o=o.split("%picture%").join(e.picture),"ok"===e.pogosnapStatus?(o=o.split("%pogosnapHidden%").join(""),o=o.split("%pogosnapStatus%").join(""),o=o.split("%author%").join(e.author),o=o.split("%permalink%").join(e.permalink)):"noresults"===e.pogosnapStatus?(o=o.split("%pogosnapHidden%").join(" hidden"),o=o.split("%pogosnapStatus%").join("<p>Pokemon does not have a picture</p>")):"loading"===e.pogosnapStatus?(o=o.split("%pogosnapHidden%").join(" hidden"),o=o.split("%pogosnapStatus%").join('<p>Loading picture...</p><br><img src="https://upload.wikimedia.org/wikipedia/commons/d/de/Ajax-loader.gif" "Loading icon">')):(o=o.split("%pogosnapHidden%").join(" hidden"),o=o.split("%pogosnapStatus%").join("<p>Error loading picture from Reddit</p>")),"ok"===e.pokeapiStatus){o=o.split("%pogoapiHidden%").join(""),o=o.split("%pokeapiStatus%").join(""),o=o.split("%weight%").join(e.weight/10),o=o.split("%height%").join(e.height/10);var t=e.types.join(", ");o=o.split("%types%").join(t)}else"loading"===e.pokeapiStatus?(o=o.split("%pokeapiHidden%").join(" hidden"),o=o.split("%pokeapiStatus%").join('<p>Loading stats...</p><br><img src="https://upload.wikimedia.org/wikipedia/commons/d/de/Ajax-loader.gif" "Loading icon">')):(o=o.split("%pokeapiHidden%").join(" hidden"),o=o.split("%pokeapiStatus%").join("<p>Error loading stats from Pokeapi</p>"));else o=this.template,o=o.split("%streetview%").join(i.streetViewUrl);return o=o.split("%id%").join(i.id),o=o.split("%type%").join(i.type),o=o.split("%lat%").join(i.lat),o=o.split("%lng%").join(i.lng),o=o.split("%name%").join(i.name),o=o.split("%icon%").join(i.icon)}};
var ListViewViewModel=function(){var e=this;e.query=ko.observable(""),e.locations=ko.observableArray(),e.filteredLocations=ko.computed(function(){var o=e.query().toLowerCase(),i=[];return""===o?(model.markers.forEach(function(e){e.setVisible(!0)}),e.locations()):(model.markers.forEach(function(e){e.setVisible(!1)}),e.locations().forEach(function(e){var r=e.name.toLowerCase();r.search(o)>-1&&(model.markers[e.id].setVisible(!0),i.push(e),console.log(e))}),i)})},listView=new ListViewViewModel;ko.applyBindings(listView),$(document).ready(function(){$(".drawer").drawer()});
var controller={init:function(){var o=this;o.updateGyms(),o.updateSpawns(),o.updatePokeStops()},updateGyms:function(){fb.onChildAdded("gyms",function(o){var e=o.id,t=o.title,n=o.lat,a=o.lng,p=new Location(e,"gym",n,a,t);MapView.updateMarker(p),listView.locations.push(p)})},updatePokeStops:function(){fb.onChildAdded("pokestops",function(o){var e=o.id,t=o.title,n=o.lat,a=o.lng,p=new Location(e,"pokestop",n,a,t);MapView.updateMarker(p),listView.locations.push(p)})},updateSpawns:function(){fb.onChildAdded("spawns",function(o){var e=o.id,t=o.pokemon_id,n=o.pokemon_name,a=o.lat,p=o.lng;model.locations[e]=new SpawnLocation(e,a,p,new Pokemon(t,n)),listView.locations.push(model.locations[e]),void 0===model.pokemons[t]&&(model.pokemons[t]=new Pokemon(t,n),model.locations[e].updatePokeInfo(model.pokemons[t]),MapView.updateMarker(model.locations[e])),"ok"===model.pokemons[t].pogoSnapStatus?(model.locations[e].updatePokeInfo(model.pokemons[t]),MapView.updateMarker(model.locations[e])):pogosnap.getData(model.pokemons[t],function(o){model.pokemons[t].picture=o.picture,model.pokemons[t].permalink=o.permalink,model.pokemons[t].author=o.author,model.pokemons[t].pogosnapStatus=o.status,model.locations[e].updatePokeInfo(model.pokemons[t]),MapView.updateMarker(model.locations[e])}),"ok"===model.pokemons[t].pokeapiStatus?(model.locations[e].updatePokeInfo(model.pokemons[t]),MapView.updateMarker(model.locations[e])):pokeapi.getData(t,function(o){model.pokemons[t].weight=o.weight,model.pokemons[t].height=o.height,model.pokemons[t].pokeapiStatus=o.status,null!==o.types&&o.types.forEach(function(o){model.pokemons[t].types.push(o.type.name)}),model.locations[e].updatePokeInfo(model.pokemons[t]),MapView.updateMarker(model.locations[e])})})}};controller.init();
//# sourceMappingURL=data:application/json;base64,
